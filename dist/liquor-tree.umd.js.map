{"version":3,"file":"liquor-tree.umd.js","sources":["../src/components/NodeContent.vue","../node_modules/vue-runtime-helpers/normalize-component.js","../node_modules/vue-runtime-helpers/inject-style/browser.js","../src/components/DraggableNode.vue","../src/utils/recurse.js","../src/utils/find.js","../src/utils/uuidV4.js","../src/lib/Selection.js","../src/lib/Node.js","../src/utils/objectToNode.js","../src/utils/stack.js","../src/utils/treeParser.js","../src/utils/request.js","../src/utils/sort.js","../src/lib/Tree.js","../src/utils/fetchDelay.js","../src/utils/keyboardNavigation.js","../src/utils/assert.js","../src/mixins/TreeMixin.js","../src/mixins/DndMixin.js","../src/main.js"],"sourcesContent":["<script>\n  const NodeContent = {\n    name: 'node-content',\n    props: ['node'],\n    render (h) {\n      const node = this.node\n      const vm = this.node.tree.vm\n\n      if (node.isEditing) {\n        let nodeText = node.text\n\n        this.$nextTick(_ => {\n          this.$refs.editCtrl.focus()\n        })\n\n        return h('input', {\n          domProps: {\n            value: node.text,\n            type: 'text'\n          },\n          class: 'tree-input',\n          on: {\n            input (e) {\n              nodeText = e.target.value\n            },\n            blur () {\n              node.stopEditing(nodeText)\n            },\n            keyup (e) {\n              if (e.keyCode === 13) {\n                node.stopEditing(nodeText)\n              }\n            },\n            mouseup (e) {\n              e.stopPropagation()\n            }\n          },\n          ref: 'editCtrl'\n        })\n      }\n\n      if (vm.$scopedSlots.default) {\n        return vm.$scopedSlots.default({ node: this.node })\n      }\n\n      return h('span', {\n        domProps: {\n          innerHTML: node.text\n        }\n      })\n    }\n  }\n\n  export default NodeContent\n</script>","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","const isOldIE = typeof navigator !== 'undefined' &&\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\nexport default function createInjector(context) {\n    return (id, style) => addStyle(id, style);\n}\nconst HEAD = document.head || document.getElementsByTagName('head')[0];\nconst styles = {};\nfunction addStyle(id, css) {\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\n    if (!style.ids.has(id)) {\n        style.ids.add(id);\n        let code = css.source;\n        if (css.map) {\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\n            // this makes source maps inside style tags work properly in Chrome\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\n            // http://stackoverflow.com/a/26603875\n            code +=\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n                    ' */';\n        }\n        if (!style.element) {\n            style.element = document.createElement('style');\n            style.element.type = 'text/css';\n            if (css.media)\n                style.element.setAttribute('media', css.media);\n            HEAD.appendChild(style.element);\n        }\n        if ('styleSheet' in style.element) {\n            style.styles.push(code);\n            style.element.styleSheet.cssText = style.styles\n                .filter(Boolean)\n                .join('\\n');\n        }\n        else {\n            const index = style.ids.size - 1;\n            const textNode = document.createTextNode(code);\n            const nodes = style.element.childNodes;\n            if (nodes[index])\n                style.element.removeChild(nodes[index]);\n            if (nodes.length)\n                style.element.insertBefore(textNode, nodes[index]);\n            else\n                style.element.appendChild(textNode);\n        }\n    }\n}\n","<template>\n  <div\n    class=\"tree-dragnode\"\n    :style=\"style\"\n  >\n    {{ target.node.text }}\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'DragNode',\n    props: ['target'],\n    computed: {\n      style() {\n        if (undefined === this.target.top) {\n          return 'display: none'\n        }\n\n        return `top: ${this.target.top}px; left: ${this.target.left}px`\n      }\n    }\n  }\n</script>\n\n<style>\n  .tree-dragnode {\n    padding: 10px;\n    border: 1px solid #e7eef7;\n    position: fixed;\n    border-radius: 8px;\n    background: #fff;\n    transform: translate(-50%, -110%);\n    z-index: 10;\n  }\n</style>\n","\nexport function recurseDown (obj, fn) {\n  let res\n\n  if (Array.isArray(obj)) {\n    return obj.map(node => recurseDown(node, fn))\n  }\n\n  res = fn(obj)\n\n  // Recurse children\n  if (res !== false && obj.children && obj.children.length) {\n    res = recurseDown(obj.children, fn)\n  }\n\n  return res\n}\n","function striptags (value) {\n  // ssr fix\n  if (!!document === false) {\n    return value\n  }\n\n  if (!striptags.__element) {\n    striptags.__element = document.createElement('div')\n  }\n\n  striptags.__element.innerHTML = value\n  return striptags.__element.innerText\n}\n\nfunction finder (criteria) {\n  return function (node) {\n    return Object.keys(criteria).every(key => {\n      if (key === 'text' || key === 'id') {\n        const c = criteria[key]\n        let val = node[key]\n\n        // remove html tags\n        val = striptags(val)\n\n        if (isRegExp(c)) {\n          return c.test(val)\n        } else {\n          return c === val\n        }\n      }\n\n      const states = criteria[key]\n\n      // it is possible to pass 'states' or 'state'\n      if (key === 'state') {\n        key = 'states'\n      }\n\n      return Object.keys(states).every(s => node[key][s] === states[s])\n    })\n  }\n}\n\nfunction isRegExp (val) {\n  return val instanceof RegExp\n}\n\nfunction getAllChildren (source) {\n  const result = []\n\n  source.forEach(function collect (node) {\n    result.push(node)\n\n    if (node.children) {\n      node.children.forEach(collect)\n    }\n  })\n\n  return result\n}\n\nexport default function find (source, criteria, deep = true) {\n  if (!source || !source.length || !criteria) {\n    return null\n  }\n\n  if (deep) {\n    source = getAllChildren(source)\n  }\n\n  // find by index\n  if (typeof criteria === 'number') {\n    return source[criteria] || null\n  }\n\n  if (typeof criteria === 'string' || criteria instanceof RegExp) {\n    criteria = {\n      text: criteria\n    }\n  }\n\n  if (typeof criteria !== 'function') {\n    criteria = finder(criteria)\n  }\n\n  const result = source.filter(criteria)\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n","\n// it is not genuine GUIDs\n\nfunction s4 () {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1)\n}\n\nexport default function uuidV4 () {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4()\n}\n","\nfunction nodeIterator (context, method, ...args) {\n  context.forEach(node => node[method](...args))\n}\n\nexport default class Selection extends Array {\n  constructor (tree, items = []) {\n    /*eslint semi: 0 */\n    super();\n\n    this.tree = tree;\n    this.push(...items)\n  }\n\n  remove () {\n    nodeIterator(this, 'remove')\n    return this\n  }\n\n  expand () {\n    nodeIterator(this, 'expand')\n    return this\n  }\n\n  collapse () {\n    nodeIterator(this, 'collapse')\n    return this\n  }\n\n  select (extendList) {\n    nodeIterator(this, 'select', extendList)\n    return this\n  }\n\n  unselect () {\n    nodeIterator(this, 'unselect')\n    return this\n  }\n\n  check () {\n    if (this.tree.options.checkbox) {\n      nodeIterator(this, 'check')\n    }\n\n    return this\n  }\n\n  uncheck () {\n    if (this.tree.options.checkbox) {\n      nodeIterator(this, 'uncheck')\n    }\n\n    return this\n  }\n\n  disable () {\n    nodeIterator(this, 'disable')\n    return this\n  }\n\n  enable () {\n    nodeIterator(this, 'enable')\n    return this\n  }\n}\n","import { recurseDown } from '../utils/recurse'\nimport find from '../utils/find'\nimport uuidV4 from '../utils/uuidV4'\nimport Selection from '../lib/Selection'\n\nexport default class Node {\n  constructor (tree, item) {\n    if (!item) {\n      throw new Error('Node can not be empty')\n    }\n\n    this.id = item.id || uuidV4()\n    this.states = item.state || {}\n\n    this.showChildren = true\n    this.children = item.children || []\n    this.parent = item.parent || null\n\n    this.isBatch = item.isBatch || false\n    this.isEditing = false\n\n    this.data = Object.assign({}, item.data || {}, {\n      text: item.text\n    })\n\n    if (!tree) {\n      throw new Error('Node must have a Tree context!')\n    }\n\n    this.tree = tree\n  }\n\n  $emit (evnt, ...args) {\n    this.tree.$emit(`node:${evnt}`, this, ...args)\n  }\n\n  getPath () {\n    if (!this.parent) {\n      return [this]\n    }\n\n    const path = [this]\n    let el = this\n\n    while ((el = el.parent) !== null) {\n      path.push(el)\n    }\n\n    return path\n  }\n\n  get key () {\n    return this.id + this.text\n  }\n\n  get depth () {\n    let depth = 0\n    let parent = this.parent\n\n    if (!parent || this.showChildren === false) {\n      return depth\n    }\n\n    do {\n      depth++\n    } while (parent = parent.parent)\n\n    return depth\n  }\n\n  get text () {\n    return this.data.text\n  }\n\n  set text (text) {\n    const oldText = this.text\n\n    if (oldText !== text) {\n      this.data.text = text\n      this.$emit('text:changed', text, oldText)\n    }\n  }\n\n  setData (data) {\n    this.data = Object.assign({}, this.data, data)\n\n    this.$emit('data:changed', this.data)\n\n    return this.data\n  }\n\n  state (name, value) {\n    if (undefined === value) {\n      return this.states[name]\n    }\n\n    // TODO: check if it for example `selectable` state it should unselect node\n\n    this.states[name] = value\n\n    return this\n  }\n\n  recurseUp (fn, node = this) {\n    if (!node.parent) {\n      return\n    }\n\n    if (fn(node.parent) !== false) {\n      return this.recurseUp(fn, node.parent)\n    }\n  }\n\n  recurseDown (fn, ignoreThis) {\n    if (ignoreThis !== true) {\n      fn(this)\n    }\n\n    if (this.hasChildren()) {\n      recurseDown(this.children, fn)\n    }\n  }\n\n  refreshIndeterminateState () {\n    if (!this.tree.options.autoCheckChildren) {\n      return this\n    }\n\n    this.state('indeterminate', false)\n\n    if (this.hasChildren()) {\n      const childrenCount = this.children.length\n      let checked = 0\n      let indeterminate = 0\n      let disabled = 0\n\n      this.children.forEach(child => {\n        if (child.checked()) {\n          checked++\n        }\n\n        if (child.disabled()) {\n          disabled++\n        }\n\n        if (child.indeterminate()) {\n          indeterminate++\n        }\n      })\n\n      if (checked > 0 && checked === childrenCount - disabled) {\n        if (!this.checked()) {\n          this.state('checked', true)\n          this.tree.check(this)\n\n          this.$emit('checked')\n        }\n      } else {\n        if (this.checked()) {\n          this.state('checked', false)\n          this.tree.uncheck(this)\n\n          this.$emit('unchecked')\n        }\n\n        this.state(\n          'indeterminate',\n          indeterminate > 0 || (checked > 0 && checked < childrenCount)\n        )\n      }\n    }\n\n    if (this.parent) {\n      this.parent.refreshIndeterminateState()\n    }\n  }\n\n  indeterminate () {\n    return this.state('indeterminate')\n  }\n\n  editable () {\n    return !this.state('disabled') && this.state('editable')\n  }\n\n  selectable () {\n    return !this.state('disabled') && this.state('selectable')\n  }\n\n  selected () {\n    return this.state('selected')\n  }\n\n  select (extendList) {\n    if (!this.selectable() || this.selected()) {\n      return this\n    }\n\n    this.tree.select(this, extendList)\n\n    this.state('selected', true)\n    this.$emit('selected')\n\n    return this\n  }\n\n  unselect () {\n    if (!this.selectable() || !this.selected()) {\n      return this\n    }\n\n    this.tree.unselect(this)\n\n    this.state('selected', false)\n    this.$emit('unselected')\n\n    return this\n  }\n\n  checked () {\n    return this.state('checked')\n  }\n\n  check () {\n    if (this.checked() || this.disabled()) {\n      return this\n    }\n\n    if (this.indeterminate()) {\n      return this.uncheck()\n    }\n\n    const checkDisabledChildren = this.tree.options.checkDisabledChildren\n    const targetNode = this\n\n    if (this.tree.options.autoCheckChildren) {\n      this.recurseDown(node => {\n        node.state('indeterminate', false)\n\n        if (node.disabled() && !checkDisabledChildren) {\n          return\n        }\n\n        if (!node.checked()) {\n          this.tree.check(node)\n\n          node.state('checked', true)\n          node.$emit('checked', node.id === targetNode.id ? undefined : targetNode)\n        }\n      })\n\n      if (this.parent) {\n        this.parent.refreshIndeterminateState()\n      }\n    } else {\n      this.tree.check(this)\n\n      this.state('checked', true)\n      this.$emit('checked')\n    }\n\n    return this\n  }\n\n  uncheck () {\n    if (!this.indeterminate() && !this.checked() || this.disabled()) {\n      return this\n    }\n\n    const targetNode = this\n\n    if (this.tree.options.autoCheckChildren) {\n      this.recurseDown(node => {\n        node.state('indeterminate', false)\n\n        if (node.checked()) {\n          this.tree.uncheck(node)\n\n          node.state('checked', false)\n          node.$emit('unchecked', node.id === targetNode.id ? undefined : targetNode)\n        }\n      })\n\n      if (this.parent) {\n        this.parent.refreshIndeterminateState()\n      }\n    } else {\n      this.tree.uncheck(this)\n\n      this.state('checked', false)\n      this.$emit('unchecked')\n    }\n\n    return this\n  }\n\n  show () {\n    if (this.visible()) {\n      return this\n    }\n\n    this.state('visible', true)\n    this.$emit('shown')\n\n    return this\n  }\n\n  hide () {\n    if (this.hidden()) {\n      return this\n    }\n\n    this.state('visible', false)\n    this.$emit('hidden')\n\n    return this\n  }\n\n  visible () {\n    return this.state('visible')\n  }\n\n  hidden () {\n    return !this.state('visible')\n  }\n\n  enable () {\n    if (this.enabled()) {\n      return this\n    }\n\n    if (this.tree.options.autoDisableChildren) {\n      this.recurseDown(node => {\n        if (node.disabled()) {\n          node.state('disabled', false)\n          node.$emit('enabled')\n        }\n      })\n    } else {\n      this.state('disabled', false)\n      this.$emit('enabled')\n    }\n\n    return this\n  }\n\n  enabled () {\n    return !this.state('disabled')\n  }\n\n  disable () {\n    if (this.disabled()) {\n      return this\n    }\n\n    if (this.tree.options.autoDisableChildren) {\n      this.recurseDown(node => {\n        if (node.enabled()) {\n          node.state('disabled', true)\n          node.$emit('disabled')\n        }\n      })\n    } else {\n      this.state('disabled', true)\n      this.$emit('disabled')\n    }\n\n    return this\n  }\n\n  disabled () {\n    return this.state('disabled')\n  }\n\n  expandTop (ignoreEvent) {\n    this.recurseUp(parent => {\n      parent.state('expanded', true)\n\n      if (ignoreEvent !== true) {\n        this.$emit('expanded', parent)\n      }\n    })\n  }\n\n  expand () {\n    if (!this.canExpand()) {\n      return this\n    }\n\n    if (this.isBatch) {\n      this.tree.loadChildren(this).then(_ => {\n        this.state('expanded', true)\n        this.$emit('expanded')\n      })\n    } else {\n      this.state('expanded', true)\n      this.$emit('expanded')\n    }\n\n    return this\n  }\n\n  canExpand () {\n    return this.collapsed() &&\n      (!this.tree.autoDisableChildren || this.disabled())\n  }\n\n  canCollapse () {\n    return this.expanded() &&\n      (!this.tree.autoDisableChildren || this.disabled())\n  }\n\n  expanded () {\n    return this.state('expanded')\n  }\n\n  collapse () {\n    if (!this.canCollapse()) {\n      return this\n    }\n\n    this.state('expanded', false)\n    this.$emit('collapsed')\n\n    return this\n  }\n\n  collapsed () {\n    return !this.state('expanded')\n  }\n\n  toggleExpand () {\n    return this._toggleOpenedState()\n  }\n\n  toggleCollapse () {\n    return this._toggleOpenedState()\n  }\n\n  _toggleOpenedState () {\n    if (this.canCollapse()) {\n      return this.collapse()\n    } else if (this.canExpand()) {\n      return this.expand()\n    }\n  }\n\n  isDropable () {\n    return this.enabled() && this.state('dropable')\n  }\n\n  isDraggable () {\n    return this.enabled() && this.state('draggable') && !this.isEditing\n  }\n\n  startDragging () {\n    if (!this.isDraggable() || this.state('dragging')) {\n      return false\n    }\n\n    // root element\n    if (this.isRoot() && this.tree.model.length === 1) {\n      return false\n    }\n\n    if (this.tree.options.store) {\n      this.tree.__silence = true\n    }\n\n    this.select()\n    this.state('dragging', true)\n    this.$emit('dragging:start')\n\n    this.tree.__silence = false\n\n    return true\n  }\n\n  finishDragging (destination, destinationPosition) {\n    if (!destination.isDropable() && destinationPosition === 'drag-on') {\n      return\n    }\n\n    const tree = this.tree\n    const clone = this.clone()\n    const parent = this.parent\n\n    clone.id = this.id\n    tree.__silence = true\n\n    this.remove()\n\n    if (destinationPosition === 'drag-on') {\n      tree.append(destination, clone)\n    } else if (destinationPosition === 'drag-below') {\n      tree.after(destination, clone)\n    } else if (destinationPosition === 'drag-above') {\n      tree.before(destination, clone)\n    }\n\n    destination.refreshIndeterminateState()\n\n    parent && parent.refreshIndeterminateState()\n    tree.__silence = false\n\n    clone.state('dragging', false)\n    this.state('dragging', false)\n    // need to call emit on the clone, because we need to have node.parent filled in the event listener\n    clone.$emit('dragging:finish', destination, destinationPosition)\n\n    if (clone.state('selected')) {\n      tree.selectedNodes.remove(this)\n      tree.selectedNodes.add(clone)\n\n      tree.vm.$set(this.state, 'selected', false)\n      tree.vm.$set(clone.state, 'selected', true)\n    }\n\n    if (this.tree.options.store) {\n      this.tree.vm.$emit('LIQUOR_NOISE')\n    }\n  }\n\n  startEditing () {\n    if (this.disabled()) {\n      return false\n    }\n\n    if (!this.isEditing) {\n      this.tree._editingNode = this\n      this.tree.activeElement = this\n      this.isEditing = true\n      this.$emit('editing:start')\n    }\n  }\n\n  stopEditing (newText) {\n    if (!this.isEditing) {\n      return\n    }\n\n    this.isEditing = false\n    this.tree._editingNode = null\n    this.tree.activeElement = null\n\n    const prevText = this.text\n\n    if (newText && newText !== false && this.text !== newText) {\n      this.text = newText\n    }\n\n    this.$emit('editing:stop', prevText)\n  }\n\n  index (verbose) {\n    return this.tree.index(this, verbose)\n  }\n\n  first () {\n    if (!this.hasChildren()) {\n      return null\n    }\n\n    return this.children[0]\n  }\n\n  last () {\n    if (!this.hasChildren()) {\n      return null\n    }\n\n    return this.children[this.children.length - 1]\n  }\n\n  next () {\n    return this.tree.nextNode(this)\n  }\n\n  prev () {\n    return this.tree.prevNode(this)\n  }\n\n  insertAt (node, index = this.children.length) {\n    if (!node) {\n      return\n    }\n\n    node = this.tree.objectToNode(node)\n\n    if (Array.isArray(node)) {\n      node\n        .reverse()\n        .map(n => this.insertAt(n, index))\n\n      return new Selection(this.tree, [...node])\n    }\n\n    node.parent = this\n\n    this.children.splice(\n      index, 0, node\n    )\n\n    if (node.disabled() && node.hasChildren()) {\n      node.recurseDown(child => {\n        child.state('disabled', true)\n      })\n    }\n\n    if (!this.isBatch) {\n      this.$emit('added', node)\n    }\n\n    return node\n  }\n\n  addChild (node) {\n    return this.insertAt(node)\n  }\n\n  append (node) {\n    return this.addChild(node)\n  }\n\n  prepend (node) {\n    return this.insertAt(node, 0)\n  }\n\n  before (node) {\n    return this.tree.before(this, node)\n  }\n\n  after (node) {\n    return this.tree.after(this, node)\n  }\n\n  empty () {\n    let node\n\n    while (node = this.children.pop()) {\n      node.remove()\n    }\n\n    return this\n  }\n\n  remove () {\n    return this.tree.removeNode(this)\n  }\n\n  removeChild (criteria) {\n    const node = this.find(criteria)\n\n    if (node) {\n      return this.tree.removeNode(node)\n    }\n\n    return null\n  }\n\n  find (criteria, deep) {\n    if (this.tree.isNode(criteria)) {\n      return criteria\n    }\n\n    return find(this.children, criteria, deep)\n  }\n\n  focus () {\n    if (this.vm) {\n      this.vm.focus()\n    }\n  }\n\n  hasChildren () {\n    return this.showChildren && this.isBatch || this.children.length > 0\n  }\n\n  /**\n  * Sometimes it's no need to have a parent. It possible to have more than 1 parent\n  */\n  isRoot () {\n    return this.parent === null\n  }\n\n  clone () {\n    return this.tree.objectToNode(this.toJSON())\n  }\n\n  toJSON () {\n    return {\n      text: this.text,\n      data: this.data,\n      state: this.states,\n      children: this.children.map(node => this.tree.objectToNode(node).toJSON())\n    }\n  }\n}\n","import Node from '../lib/Node'\nimport uuidV4 from '../utils/uuidV4'\n\n/**\n* Default Node's states\n*/\nconst nodeStates = {\n  selected: false,\n  selectable: true,\n  checked: false,\n  expanded: false,\n  disabled: false,\n  visible: true,\n  indeterminate: false,\n  matched: false,\n  editable: true,\n  dragging: false,\n  draggable: true,\n  dropable: true\n}\n\nfunction merge (state = {}) {\n  return Object.assign({}, nodeStates, state)\n}\n\nexport default function objectToNode (tree, obj) {\n  let node = null\n\n  if (obj instanceof Node) {\n    return obj\n  }\n\n  if (typeof obj === 'string') {\n    node = new Node(tree, {\n      text: obj,\n      state: merge(),\n      id: uuidV4()\n    })\n  } else if (Array.isArray(obj)) {\n    return obj.map(o => objectToNode(tree, o))\n  } else {\n    node = new Node(tree, obj)\n    node.states = merge(node.states)\n\n    if (!node.id) {\n      node.id = uuidV4()\n    }\n\n    if (node.children.length) {\n      node.children = node.children.map(child => {\n        child = objectToNode(tree, child)\n        child.parent = node\n\n        return child\n      })\n    }\n  }\n\n  return node\n}\n","\nexport class List extends Array {\n  empty () {\n    this.splice(0, this.length)\n\n    return this\n  }\n\n  has (item) {\n    return this.includes(item)\n  }\n\n  add (...items) {\n    this.push(...items)\n\n    return this\n  }\n\n  remove (item) {\n    const index = this.indexOf(item)\n\n    if (index === -1) {\n      return this\n    }\n\n    this.splice(index, 1)\n\n    return this\n  }\n\n  removeAll (item) {\n    while (this.includes(item)) {\n      this.remove(item)\n    }\n\n    return this\n  }\n\n  top () {\n    return this[this.length - 1]\n  }\n}\n","import objectToNode from '../utils/objectToNode'\n\n/**\n  Every Node has certain format:\n  {\n    id,           // Unique Node id. By default it generates using uuidV4\n    text,         // Node text\n    children,     // List of children. Each children has the same format\n    parent,       // Parent Node or null. The tree is able to have more than 1 root node\n    state,        // States of Node. Ex.: selected, checked and so on\n    data          // Any types of data. It is similar to `storage`.\n                  // Ex.: data: {myAwesomeProperty: 10}. To get this property you need: Node.data('myAwesomeProperty')\n  }\n*/\n\nconst defaultPropertyNames = {\n  id: 'id',\n  text: 'text',\n  children: 'children',\n  state: 'state',\n  data: 'data',\n  isBatch: 'isBatch'\n}\n\nfunction convertNames (obj, names) {\n  return {\n    id: obj[names.id],\n    text: obj[names.text],\n    children: obj[names.children],\n    state: obj[names.state],\n    data: obj[names.data],\n    isBatch: obj[names.isBatch]\n  }\n}\n\nconst TreeParser = {\n  parse (data, tree, options = {}) {\n    if (typeof data === 'string') {\n      data = JSON.parse(data)\n    }\n\n    if (!Array.isArray(data)) {\n      data = [data]\n    }\n\n    const p = Object.assign(\n      {},\n      defaultPropertyNames,\n      options\n    )\n\n    const preparedItems = data.map(function converter (item) {\n      const convertedItem = convertNames(item, p)\n\n      // Possible to receive 1 child like a simple object. It must be converted to an array\n      // We do not have checks on the correctness of the format. A developer should pass correct format\n      if (convertedItem.children && !Array.isArray(convertedItem.children)) {\n        convertedItem.children = [convertedItem.children]\n      }\n\n      if (convertedItem.children) {\n        convertedItem.children = convertedItem.children.map(converter)\n      }\n\n      return convertedItem\n    })\n\n    return preparedItems.map(item => objectToNode(tree, item))\n  }\n}\n\nexport { TreeParser }\n","/*eslint no-undef: 0 */\n\nfunction request (url) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    xhr.open('GET', url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.addEventListener('load', _ => {\n      try {\n        const response = JSON.parse(xhr.response)\n\n        resolve(response)\n      } catch (e) {\n        reject(e)\n      }\n    })\n\n    xhr.send(null)\n  })\n}\n\nexport function get (url) {\n  return request(url)\n}\n\nexport function createTemplate (template) {\n  return source => {\n    const re = /{([^}]+)}/\n    let m\n    let result = template\n\n    while (m = re.exec(result)) {\n      result = result.replace(m[0], source[m[1]])\n    }\n\n    return result\n  }\n}\n","\nfunction orderAsc (node0, node1) {\n  if (node0.text < node1.text) {\n    return -1\n  }\n\n  if (node0.text > node1.text) {\n    return 1\n  }\n\n  return 0\n}\n\nfunction orderDesc (node0, node1) {\n  if (node0.text < node1.text) {\n    return 1\n  }\n\n  if (node0.text > node1.text) {\n    return -1\n  }\n\n  return 0\n}\n\nfunction getCompareFunction (order) {\n  switch (order.toLowerCase()) {\n    case 'asc': return orderAsc\n    case 'desc': return orderDesc\n  }\n}\n\nexport default (source, compareFunction) => {\n  if (typeof compareFunction === 'string') {\n    compareFunction = getCompareFunction(compareFunction)\n  }\n\n  if (Array.isArray(source) && typeof compareFunction === 'function') {\n    source.sort(compareFunction)\n  }\n}\n","import Node from '../lib/Node'\nimport Selection from '../lib/Selection'\n\nimport find from '../utils/find'\nimport objectToNode from '../utils/objectToNode'\nimport { List } from '../utils/stack'\nimport { TreeParser } from '../utils/treeParser'\nimport { recurseDown } from '../utils/recurse'\nimport { get, createTemplate } from '../utils/request'\nimport sort from '../utils/sort'\nimport fetchDelay from '../utils/fetchDelay'\n\nexport default class Tree {\n  constructor (vm) {\n    this.vm = vm\n    this.options = vm.opts\n\n    this.activeElement = null\n\n    // We have to convert 'fetchData' to function. It must return Promise always\n    const fetchData = this.options.fetchData\n\n    if (typeof fetchData === 'string') {\n      this.options.fetchData = ((template) => {\n        const urlTemplate = createTemplate(template)\n\n        return node => {\n          return get(urlTemplate(node)).catch(this.options.onFetchError)\n        }\n      })(fetchData)\n    }\n  }\n\n  $on (name, ...args) {\n    this.vm.$on(name, ...args)\n  }\n\n  $once (name, ...args) {\n    this.vm.$once(name, ...args)\n  }\n\n  $off (name, ...args) {\n    this.vm.$off(name, ...args)\n  }\n\n  $emit (name, ...args) {\n    if (this.__silence) {\n      return\n    }\n\n    this.vm.$emit(name, ...args)\n\n    if (this.options.store) {\n      this.vm.$emit('LIQUOR_NOISE')\n    }\n  }\n\n  _sort (source, compareFn, deep) {\n    if (deep !== false) {\n      this.recurseDown(source, node => {\n        if (node.hasChildren()) {\n          sort(node.children, compareFn)\n        }\n      })\n    }\n\n    sort(source, compareFn)\n  }\n\n  sortTree (compareFn, deep) {\n    this._sort(this.model, compareFn, deep)\n  }\n\n  sort (query, compareFn, deep) {\n    const targetNode = this.find(query, true)\n\n    if (!targetNode || !compareFn) {\n      return\n    }\n\n    targetNode.forEach(node => {\n      this._sort(node.children, compareFn, deep)\n    })\n  }\n\n  clearFilter () {\n    this.recurseDown(node => {\n      node.state('matched', false)\n      node.state('visible', true)\n      node.state('expanded', node.__expanded)\n\n      node.__expanded = undefined\n      node.showChildren = true\n    })\n\n    this.vm.matches.length = 0\n    this.vm.$emit('tree:filtered', [], '')\n  }\n\n  filter (query) {\n    if (!query) {\n      return this.clearFilter()\n    }\n\n    const matches = []\n    const predicate = this.options.filter.matcher\n    const { showChildren, plainList } = this.options.filter\n\n    // collect nodes\n    this.recurseDown(node => {\n      if (predicate(query, node)) {\n        matches.push(node)\n      }\n\n      node.showChildren = true\n\n      // save prev `expanded` state\n      if (undefined === node.__expanded) {\n        node.__expanded = node.state('expanded')\n      }\n\n      node.state('visible', false)\n      node.state('matched', false)\n      node.state('expanded', true)\n    })\n\n    matches.reverse().forEach(node => {\n      node.state('matched', true)\n      node.state('visible', true)\n\n      node.showChildren = !plainList\n\n      if (node.hasChildren()) {\n        node.recurseDown(n => {\n          n.state('visible', !!showChildren)\n        }, true)\n      }\n\n      node.recurseUp(parent => {\n        parent.state('visible', true)\n        parent.state('expanded', true)\n      })\n\n      if (node.hasChildren()) {\n        node.state('expanded', false)\n      }\n    })\n\n    this.vm.matches = matches\n\n    this.vm.$emit('tree:filtered', matches, query)\n\n    return matches\n  }\n\n  selected () {\n    return new Selection(this, ...this.selectedNodes)\n  }\n\n  checked () {\n    if (!this.options.checkbox) {\n      return null\n    }\n\n    return new Selection(this, ...this.checkedNodes)\n  }\n\n  loadChildren (node) {\n    if (!node) {\n      return\n    }\n\n    this.$emit('tree:data:fetch', node)\n\n    if (this.options.minFetchDelay > 0 && node.vm) {\n      node.vm.loading = true\n    }\n\n    const result = this.fetch(node)\n      .then(children => {\n        node.append(children)\n        node.isBatch = false\n\n        if (this.options.autoCheckChildren) {\n          if (node.checked()) {\n            node.recurseDown(child => {\n              child.state('checked', true)\n            })\n          }\n\n          node.refreshIndeterminateState()\n        }\n\n        this.$emit('tree:data:received', node)\n      })\n\n    return Promise.all([\n      fetchDelay(this.options.minFetchDelay),\n      result\n    ]).then(_ => {\n      if (node.vm) {\n        node.vm.loading = false\n      }\n\n      return result\n    })\n  }\n\n  fetch (node, parseData) {\n    let result = this.options.fetchData(node)\n\n    if (!result.then) {\n      result = get(result)\n        .catch(this.options.onFetchError)\n    }\n\n    if (parseData === false) {\n      return result\n    }\n\n    return result\n      .then(data => {\n        try {\n          return this.parse(data, this.options.modelParse)\n        } catch (e) {\n          throw new Error(e)\n        }\n      })\n      .catch(this.options.onFetchError)\n  }\n\n  fetchInitData () {\n    // simulate root node\n    const node = {\n      id: 'root',\n      name: 'root'\n    }\n\n    return this.fetch(node, false)\n  }\n\n  setModel (data) {\n    return new Promise(resolve => {\n      this.model = this.parse(data, this.options.modelParse)\n\n      /* eslint-disable */\n      requestAnimationFrame(_ => {\n        this.vm.model = this.model\n        resolve()\n      })\n      /* eslint-enable */\n\n      /**\n      * VueJS transform properties to reactives when constructor is running\n      * And we lose List object (extended from Array)\n      */\n      this.selectedNodes = new List()\n      this.checkedNodes = new List()\n\n      recurseDown(this.model, node => {\n        node.tree = this\n\n        if (node.selected()) {\n          this.selectedNodes.add(node)\n        }\n\n        if (node.checked()) {\n          this.checkedNodes.add(node)\n\n          if (node.parent) {\n            node.parent.refreshIndeterminateState()\n          }\n        }\n\n        if (this.options.autoDisableChildren && node.disabled()) {\n          node.recurseDown(child => {\n            child.state('disabled', true)\n          })\n        }\n      })\n\n      if (!this.options.multiple && this.selectedNodes.length) {\n        const top = this.selectedNodes.top()\n\n        this.selectedNodes.forEach(node => {\n          if (top !== node) {\n            node.state('selected', false)\n          }\n        })\n\n        this.selectedNodes\n          .empty()\n          .add(top)\n      }\n\n      // Nodes can't be selected on init. By it's possible to select through API\n      if (this.options.checkOnSelect && this.options.checkbox) {\n        this.unselectAll()\n      }\n    })\n  }\n\n  recurseDown (node, fn) {\n    if (!fn && node) {\n      fn = node\n      node = this.model\n    }\n\n    if (typeof fn !== 'function') {\n      new TypeError('Argument must be a function')\n    }\n\n    return recurseDown(node, fn)\n  }\n\n  select (node, extendList) {\n    const treeNode = this.getNode(node)\n\n    if (!treeNode) {\n      return false\n    }\n\n    if (this.options.multiple && extendList) {\n      this.selectedNodes.add(treeNode)\n    } else {\n      this.unselectAll()\n      this.selectedNodes\n        .empty()\n        .add(treeNode)\n    }\n\n    return true\n  }\n\n  selectAll () {\n    if (!this.options.multiple) {\n      return false\n    }\n\n    this.selectedNodes.empty()\n\n    this.recurseDown(node => {\n      this.selectedNodes.add(\n        node.select(true)\n      )\n    })\n\n    return true\n  }\n\n  unselect (node) {\n    const treeNode = this.getNode(node)\n\n    if (!treeNode) {\n      return false\n    }\n\n    this.selectedNodes.remove(treeNode)\n\n    return true\n  }\n\n  unselectAll () {\n    let node\n\n    while (node = this.selectedNodes.pop()) {\n      node.unselect()\n    }\n\n    return true\n  }\n\n  check (node) {\n    this.checkedNodes.add(node)\n  }\n\n  uncheck (node) {\n    this.checkedNodes.remove(node)\n  }\n\n  checkAll () {\n    this.recurseDown(node => {\n      if (node.depth === 0) {\n        if (node.indeterminate()) {\n          node.state('indeterminate', false)\n        }\n\n        node.check()\n      }\n    })\n  }\n\n  uncheckAll () {\n    let node\n\n    while (node = this.checkedNodes.pop()) {\n      node.uncheck()\n    }\n\n    return true\n  }\n\n  expand (node) {\n    if (node.expanded()) {\n      return false\n    }\n\n    node.expand()\n\n    return true\n  }\n\n  collapse (node) {\n    if (node.collapsed()) {\n      return false\n    }\n\n    node.collapse()\n\n    return true\n  }\n\n  toggleExpand (node) {\n    if (!node.hasChildren()) {\n      return false\n    }\n\n    node.toggleExpand()\n\n    return true\n  }\n\n  toggleCollapse (node) {\n    if (!node.hasChildren()) {\n      return false\n    }\n\n    node.toggleCollapse()\n\n    return true\n  }\n\n  expandAll () {\n    this.recurseDown(node => {\n      if (node.hasChildren() && node.collapsed()) {\n        node.expand()\n      }\n    })\n  }\n\n  collapseAll () {\n    this.recurseDown(node => {\n      if (node.hasChildren() && node.expanded()) {\n        node.collapse()\n      }\n    })\n  }\n\n  index (node, verbose) {\n    let target = node.parent\n\n    if (target) {\n      target = target.children\n    } else {\n      target = this.model\n    }\n\n    const index = target.indexOf(node)\n\n    if (verbose) {\n      return {\n        index: index,\n        target,\n        node: target[index]\n      }\n    }\n\n    return index\n  }\n\n  nextNode (node) {\n    const { target, index } = this.index(node, true)\n\n    return target[index + 1] || null\n  }\n\n  nextVisibleNode (node) {\n    if (node.hasChildren() && node.expanded()) {\n      return node.first()\n    }\n\n    const nextNode = this.nextNode(node)\n\n    if (!nextNode && node.parent) {\n      return node.parent.next()\n    }\n\n    return nextNode\n  }\n\n  prevNode (node) {\n    const { target, index } = this.index(node, true)\n\n    return target[index - 1] || null\n  }\n\n  prevVisibleNode (node) {\n    const prevNode = this.prevNode(node)\n\n    if (!prevNode) {\n      return node.parent\n    }\n\n    if (prevNode.hasChildren() && prevNode.expanded()) {\n      return prevNode.last()\n    }\n\n    return prevNode\n  }\n\n  addToModel (node, index = this.model.length) {\n    node = this.objectToNode(node)\n\n    this.model.splice(index, 0, node)\n    this.recurseDown(node, n => {\n      n.tree = this\n    })\n\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  append (criteria, node) {\n    const targetNode = this.find(criteria)\n\n    if (targetNode) {\n      return targetNode.append(node)\n    }\n\n    return false\n  }\n\n  prepend (criteria, node) {\n    const targetNode = this.find(criteria)\n\n    if (targetNode) {\n      return targetNode.prepend(node)\n    }\n\n    return false\n  }\n\n  before (targetNode, sourceNode) {\n    targetNode = this.find(targetNode)\n\n    const position = this.index(targetNode, true)\n    const node = this.objectToNode(sourceNode)\n\n    if (!~position.index) {\n      return false\n    }\n\n    position.target.splice(\n      position.index,\n      0,\n      node\n    )\n\n    node.parent = targetNode.parent\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  after (targetNode, sourceNode) {\n    targetNode = this.find(targetNode)\n\n    const position = this.index(targetNode, true)\n    const node = this.objectToNode(sourceNode)\n\n    if (!~position.index) {\n      return false\n    }\n\n    position.target.splice(\n      position.index + 1,\n      0,\n      node\n    )\n\n    node.parent = targetNode.parent\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  addNode (node) {\n    const index = this.model.length\n\n    node = objectToNode(node)\n\n    this.model.splice(index, 0, node)\n    this.$emit('node:added', node)\n\n    return node\n  }\n\n  remove (criteria, multiple) {\n    return this.removeNode(\n      this.find(criteria, multiple)\n    )\n  }\n\n  removeNode (node) {\n    if (node instanceof Selection) {\n      return node.remove()\n    }\n\n    if (!node) {\n      return false\n    }\n\n    if (!node.parent) {\n      if (~this.model.indexOf(node)) {\n        this.model.splice(\n          this.model.indexOf(node),\n          1\n        )\n      }\n    } else {\n      const children = node.parent.children\n\n      if (~children.indexOf(node)) {\n        children.splice(\n          children.indexOf(node),\n          1\n        )\n      }\n    }\n\n    if (node.parent) {\n      if (node.parent.indeterminate() && !node.parent.hasChildren()) {\n        node.parent.state('indeterminate', false)\n      }\n    }\n\n    if (this.activeElement !== null) {\n      if (node.id === this.activeElement.id) {\n        this.activeElement = null\n      }\n    }\n\n    node.parent = null\n\n    this.$emit('node:removed', node)\n\n    this.selectedNodes.remove(node)\n    this.checkedNodes.remove(node)\n\n    const matches = this.vm.matches\n\n    if (matches && matches.length) {\n      if (matches.includes(node)) {\n        matches.splice(\n          matches.indexOf(node),\n          1\n        )\n      }\n    }\n\n    return node\n  }\n\n  isNode (node) {\n    return node instanceof Node\n  }\n\n  find (criteria, multiple) {\n    if (this.isNode(criteria)) {\n      return criteria\n    }\n\n    const result = find(this.model, criteria)\n\n    if (!result || !result.length) {\n      return new Selection(this, [])\n    }\n\n    if (multiple === true) {\n      return new Selection(this, result)\n    }\n\n    return new Selection(this, [result[0]])\n  }\n\n  updateData (criteria, callback) {\n    const nodes = this.find(criteria)\n\n    nodes.forEach(node => node.setData(callback(node)))\n\n    return nodes\n  }\n\n  getNodeById (id) {\n    let targetNode = null\n\n    recurseDown(this.model, node => {\n      if ('' + node.id === id) {\n        targetNode = node\n        return false\n      }\n    })\n\n    return targetNode\n  }\n\n  getNode (node) {\n    if (this.isNode(node)) {\n      return node\n    }\n\n    return null\n  }\n\n  objectToNode (obj) {\n    return objectToNode(this, obj)\n  }\n\n  parse (data, options) {\n    if (!options) {\n      options = this.options.propertyNames\n    }\n\n    try {\n      return TreeParser.parse(data, this, options)\n    } catch (e) {\n      return []\n    }\n  }\n}\n","export default function (ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","\nconst keyCodes = {\n  'ARROW_LEFT': 37,\n  'ARROW_TOP': 38,\n  'ARROW_RIGHT': 39,\n  'ARROW_BOTTOM': 40,\n  'SPACE': 32,\n  'DELETE': 46,\n  'ENTER': 13,\n  'ESC': 27\n}\n\nconst codesArr = [37, 38, 39, 40, 32]\n\nfunction focusUp (tree, node) {\n  const prevNode = tree.prevVisibleNode(node)\n\n  if (!prevNode) {\n    return\n  }\n\n  if (prevNode.disabled()) {\n    return focusUp(tree, prevNode)\n  }\n\n  prevNode.focus()\n}\n\nfunction focusdDown (tree, node) {\n  const nextNode = tree.nextVisibleNode(node)\n\n  if (!nextNode) {\n    return\n  }\n\n  if (nextNode.disabled()) {\n    return focusdDown(tree, nextNode)\n  }\n\n  nextNode.focus()\n}\n\nfunction checkNode (tree, node) {\n  if (!tree.options.checkbox) {\n    return\n  }\n\n  if (node.checked()) {\n    node.uncheck()\n  } else {\n    node.check()\n  }\n}\n\nfunction leftArrow (tree, node) {\n  if (node.expanded()) {\n    node.collapse()\n  } else {\n    const parent = node.parent\n\n    if (parent) {\n      parent.focus()\n    }\n  }\n}\n\nfunction rightArrow (tree, node) {\n  if (node.collapsed()) {\n    node.expand()\n  } else {\n    const first = node.first()\n\n    if (first) {\n      first.focus()\n    }\n  }\n}\n\nfunction deleteNode (tree, node) {\n  const deletion = tree.options.deletion\n\n  if (deletion) {\n    if (typeof deletion === 'function') {\n      if (deletion(node) === true) {\n        node.remove()\n      }\n    } else if (deletion === true) {\n      node.remove()\n    }\n  }\n}\n\nexport default function (tree) {\n  const vm = tree.vm\n  const $el = vm.$el\n\n  $el.addEventListener('keydown', e => {\n    const code = e.keyCode\n    const node = tree.activeElement\n\n    if (!tree.isNode(node)) {\n      return\n    }\n\n    if (node.isEditing) {\n      switch (code) {\n        case keyCodes.ESC: return node.stopEditing(false)\n      }\n    } else {\n      if (codesArr.includes(code)) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case keyCodes.ARROW_LEFT: return leftArrow(tree, node)\n        case keyCodes.ARROW_RIGHT: return rightArrow(tree, node)\n        case keyCodes.ARROW_TOP: return focusUp(tree, node)\n        case keyCodes.ARROW_BOTTOM: return focusdDown(tree, node)\n        case keyCodes.SPACE:\n        case keyCodes.ENTER: return checkNode(tree, node)\n        case keyCodes.DELETE: return deleteNode(tree, node)\n      }\n    }\n  }, true)\n}\n","export default function assert (truth, message) {\n  if (truth === false) {\n    throw new Error(message)\n  }\n}\n","import Tree from '../lib/Tree'\nimport initKeyboardNavigation from '../utils/keyboardNavigation'\nimport assert from '../utils/assert'\n\nfunction initEvents (vm) {\n  const { multiple, checkbox } = vm.opts\n  const tree = vm.tree\n\n  const emitter = (obj) => {\n    const selected = vm.selected()\n\n    if (!checkbox) {\n      vm.$emit('input', multiple ? selected : (selected[0] || null))\n    } else {\n      vm.$emit('input', {\n        selected: multiple ? selected : (selected[0] || null),\n        checked: vm.checked()\n      })\n    }\n  }\n\n  emitter()\n\n  tree.$on('node:selected', emitter)\n  tree.$on('node:unselected', emitter)\n\n  if (checkbox) {\n    tree.$on('node:checked', emitter)\n    tree.$on('node:unchecked', emitter)\n  }\n\n  tree.$on('node:added', (targetNode, newNode) => {\n    const node = newNode || targetNode\n\n    if (checkbox) {\n      if (node.state('checked') && !tree.checkedNodes.has(node)) {\n        tree.checkedNodes.add(node)\n      }\n\n      node.refreshIndeterminateState()\n    }\n\n    if (node.state('selected') && !tree.selectedNodes.has(node)) {\n      tree.select(node)\n    }\n\n    emitter()\n  })\n}\n\nexport default {\n  mounted () {\n    const tree = new Tree(this)\n    let dataProvider\n\n    this.tree = tree\n    this._provided.tree = tree\n\n    if (!this.data && this.opts.fetchData) {\n      // Get initial data if we don't have a data directly\n      // In this case we call 'fetcher' with node.id == 'root' && node.name == 'root'\n      dataProvider = tree.fetchInitData()\n    } else if (this.data && this.data.then) {\n      // Yeah... nice check!\n      dataProvider = this.data\n      this.loading = true\n    } else {\n      dataProvider = Promise.resolve(this.data)\n    }\n\n    dataProvider.then(data => {\n      if (!data) {\n        data = []\n      }\n\n      if (this.opts.store) {\n        this.connectStore(this.opts.store)\n      } else {\n        this.tree.setModel(data)\n      }\n\n      if (this.loading) {\n        this.loading = false\n      }\n\n      this.$emit('tree:mounted', this)\n\n      initEvents(this)\n    })\n\n    if (this.opts.keyboardNavigation !== false) {\n      initKeyboardNavigation(tree)\n    }\n  },\n\n  methods: {\n    connectStore (store) {\n      const { store: Store, mutations, getter, dispatcher } = store\n\n      assert(typeof getter === 'function', '`getter` must be a function')\n      assert(typeof dispatcher === 'function', '`dispatcher` must be a function')\n\n      if (undefined !== mutations) {\n        assert(Array.isArray(mutations), '`mutations` must be an array')\n      }\n\n      Store.subscribe((action, state) => {\n        if (!mutations) {\n          this.tree.setModel(getter())\n        } else if (mutations.includes(action.type)) {\n          this.tree.setModel(getter())\n        }\n      })\n\n      this.tree.setModel(getter())\n\n      this.$on('LIQUOR_NOISE', () => {\n        this.$nextTick(_ => {\n          dispatcher(this.toJSON())\n        })\n      })\n    },\n\n    recurseDown (fn) {\n      this.tree.recurseDown(fn)\n    },\n\n    selected () {\n      return this.tree.selected()\n    },\n\n    checked () {\n      return this.tree.checked()\n    },\n\n    append (criteria, node) {\n      // append to model\n      if (!node) {\n        return this.tree.addToModel(criteria, this.tree.model.length)\n      }\n\n      return this.tree.append(criteria, node)\n    },\n\n    prepend (criteria, node) {\n      if (!node) {\n        return this.tree.addToModel(criteria, 0)\n      }\n\n      return this.tree.prepend(criteria, node)\n    },\n\n    addChild (criteria, node) {\n      return this.append(criteria, node)\n    },\n\n    remove (criteria, multiple) {\n      return this.tree.remove(criteria, multiple)\n    },\n\n    before (criteria, node) {\n      if (!node) {\n        return this.prepend(criteria)\n      }\n\n      return this.tree.before(criteria, node)\n    },\n\n    after (criteria, node) {\n      if (!node) {\n        return this.append(criteria)\n      }\n\n      return this.tree.after(criteria, node)\n    },\n\n    find (criteria, multiple) {\n      return this.tree.find(criteria, multiple)\n    },\n\n    findAll (criteria) {\n      return this.tree.find(criteria, true)\n    },\n\n    expandAll () {\n      return this.tree.expandAll()\n    },\n\n    updateData (criteria, callback) {\n      return this.tree.updateData(criteria, callback)\n    },\n\n    collapseAll () {\n      return this.tree.collapseAll()\n    },\n\n    sortTree (compareFn, deep) {\n      return this.tree.sortTree(compareFn, deep)\n    },\n\n    sort (...args) {\n      return this.tree.sort(...args)\n    },\n\n    setModel (data) {\n      return this.tree.setModel(data)\n    },\n\n    getRootNode () {\n      return this.tree.model.length === 1\n        ? this.tree.model[0]\n        : this.tree.model\n    },\n\n    toJSON () {\n      return JSON.parse(\n        JSON.stringify(this.model)\n      )\n    }\n  }\n\n/*eslint semi: 0 */\n/* https://github.com/vuejs/rollup-plugin-vue/issues/169 */\n};\n","const DropPosition = {\n  ABOVE: 'drag-above',\n  BELOW: 'drag-below',\n  ON: 'drag-on'\n}\n\nfunction isMovingStarted (event, start) {\n  return Math.abs(event.clientX - start[0]) > 5 || Math.abs(event.clientY - start[1]) > 5\n}\n\nfunction composedPath (event) {\n  let el = event.target\n  const path = []\n\n  while (el) {\n    path.push(el)\n\n    if (el.tagName === 'HTML') {\n      path.push(document)\n      path.push(window)\n\n      return path\n    }\n\n    el = el.parentElement\n  }\n\n  return path\n}\n\nfunction getPath (event) {\n  if (event.path) {\n    return event.path\n  }\n\n  if (event.composedPath) {\n    return event.composedPath()\n  }\n\n  return composedPath(event)\n}\n\nfunction getSelectedNode (event) {\n  let className\n  let i = 0\n\n  const path = getPath(event)\n\n  for (; i < path.length; i++) {\n    className = path[i].className || ''\n\n    if (/tree-node/.test(className)) {\n      return path[i]\n    }\n  }\n\n  return null\n}\n\nfunction getDropDestination (e) {\n  const selectedNode = getSelectedNode(e)\n\n  if (!selectedNode) {\n    return null\n  }\n\n  return selectedNode\n}\n\nfunction updateHelperClasses (target, classes) {\n  if (!target) {\n    return\n  }\n\n  let className = target.className\n\n  if (!classes) {\n    for (const i in DropPosition) {\n      className = className.replace(DropPosition[i], '')\n    }\n\n    className.replace('dragging', '')\n  } else if (!new RegExp(classes).test(className)) {\n    className += ' ' + classes\n  }\n\n  target.className = className.replace(/\\s+/g, ' ')\n}\n\nfunction getDropPosition (e, element) {\n  const coords = element.getBoundingClientRect()\n  const nodeSection = coords.height / 3\n\n  let dropPosition = DropPosition.ON\n\n  if (coords.top + nodeSection >= e.clientY) {\n    dropPosition = DropPosition.ABOVE\n  } else if (coords.top + nodeSection * 2 <= e.clientY) {\n    (\n      dropPosition = DropPosition.BELOW\n    )\n  }\n\n  return dropPosition\n}\n\nfunction callDndCb (args, opts, method) {\n  if (!opts || !opts[method] || typeof opts[method] !== 'function') {\n    return\n  }\n\n  return opts[method](...args) !== false\n}\n\nfunction clearDropClasses (parent) {\n  for (const key in DropPosition) {\n    const el = parent.querySelectorAll(`.${DropPosition[key]}`)\n\n    for (let i = 0; i < el.length; i++) {\n      updateHelperClasses(el[i])\n    }\n  }\n}\n\nexport default {\n  methods: {\n    onDragStart (e) {\n      e.preventDefault()\n    },\n\n    startDragging (node, event) {\n      if (!node.isDraggable() || callDndCb([node], this.tree.options.dnd, 'onDragStart') === false) {\n        return\n      }\n\n      this.$$startDragPosition = [event.clientX, event.clientY]\n      this.$$possibleDragNode = node\n\n      this.initDragListeners()\n    },\n\n    initDragListeners () {\n      let dropPosition\n\n      const removeListeners = () => {\n        window.removeEventListener('mouseup', onMouseUp, true)\n        window.removeEventListener('mousemove', onMouseMove, true)\n      }\n\n      const onMouseUp = (e) => {\n        if (!this.$$startDragPosition) {\n          e.stopPropagation()\n        }\n\n        if (this.draggableNode) {\n          this.draggableNode.node.state('dragging', false)\n        }\n\n        if (this.$$dropDestination && this.tree.isNode(this.$$dropDestination) && this.$$dropDestination.vm) {\n          updateHelperClasses(this.$$dropDestination.vm.$el, null)\n\n          const cbResult = callDndCb(\n            [this.draggableNode.node, this.$$dropDestination, dropPosition],\n            this.tree.options.dnd,\n            'onDragFinish'\n          )\n\n          if (cbResult !== false && !(!this.$$dropDestination.isDropable() && dropPosition === DropPosition.ON || !dropPosition)) {\n            this.draggableNode.node.finishDragging(this.$$dropDestination, dropPosition)\n            this.draggableNode.node.parent = this.$$dropDestination\n          }\n\n          this.$$dropDestination = null\n        }\n\n        this.$$possibleDragNode = null\n        this.$set(this, 'draggableNode', null)\n\n        removeListeners()\n      }\n\n      const onMouseMove = (e) => {\n        if (this.$$startDragPosition && !isMovingStarted(e, this.$$startDragPosition)) {\n          return\n        } else {\n          this.$$startDragPosition = null\n        }\n\n        if (this.$$possibleDragNode) {\n          if (this.$$possibleDragNode.startDragging() === false) {\n            removeListeners()\n            this.$$possibleDragNode = null\n\n            return\n          }\n\n          this.$set(this, 'draggableNode', { node: this.$$possibleDragNode, left: 0, top: 0 })\n          this.$$possibleDragNode = null\n        }\n\n        this.draggableNode.left = e.clientX\n        this.draggableNode.top = e.clientY\n\n        const dropDestination = getDropDestination(e)\n\n        clearDropClasses(this.$el)\n\n        if (dropDestination) {\n          const dropDestinationId = dropDestination.getAttribute('data-id')\n\n          if (this.draggableNode.node.id === dropDestinationId) {\n            return\n          }\n\n          if (!this.$$dropDestination || this.$$dropDestination.id !== dropDestinationId) {\n            this.$$dropDestination = this.tree.getNodeById(dropDestinationId)\n          }\n\n          if (this.$$dropDestination && this.draggableNode.node) {\n            const path = this.$$dropDestination.getPath()\n\n            if (path.includes(this.draggableNode.node)) {\n              this.$$dropDestination = null\n              return\n            }\n          }\n\n          dropPosition = getDropPosition(e, dropDestination)\n\n          const cbResult = callDndCb(\n            [this.draggableNode.node, this.$$dropDestination, dropPosition],\n            this.tree.options.dnd,\n            'onDragOn'\n          )\n\n          const isDropable = this.$$dropDestination.isDropable() && cbResult !== false\n\n          if (!isDropable && dropPosition === DropPosition.ON) {\n            dropPosition = null\n          }\n\n          updateHelperClasses(dropDestination, dropPosition)\n        }\n      }\n\n      window.addEventListener('mouseup', onMouseUp, true)\n      window.addEventListener('mousemove', onMouseMove, true)\n    }\n  }\n}\n","import TreeRoot from './components/TreeRoot.vue'\n\nconst install = Vue => {\n  Vue.component(TreeRoot.name, TreeRoot)\n}\n\nTreeRoot.install = install\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(TreeRoot)\n}\n\nexport default TreeRoot\n"],"names":["const","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","isOldIE","navigator","test","userAgent","toLowerCase","id","style","css","group","media","styles","ids","Set","has","let","code","source","map","sources","btoa","unescape","encodeURIComponent","JSON","stringify","element","document","createElement","type","setAttribute","HEAD","appendChild","push","styleSheet","cssText","filter","Boolean","join","index","size","textNode","createTextNode","nodes","childNodes","removeChild","length","insertBefore","addStyle","head","getElementsByTagName","script","recurseDown","obj","fn","res","Array","isArray","node","children","striptags","value","__element","innerHTML","innerText","finder","criteria","Object","keys","every","key","c","val","RegExp","states","s","find","deep","result","forEach","collect","text","s4","Math","floor","random","toString","substring","uuidV4","nodeIterator","method","args","Selection","tree","items","super","ref","remove","expand","collapse","select","extendList","unselect","check","checkbox","uncheck","disable","enable","Node","item","Error","state","showChildren","isBatch","isEditing","data","assign","$emit","evnt","getPath","path","el","prototypeAccessors","depth","oldText","setData","name","undefined","recurseUp","ignoreThis","hasChildren","refreshIndeterminateState","autoCheckChildren","childrenCount","checked","indeterminate","disabled","child","editable","selectable","selected","checkDisabledChildren","targetNode","show","visible","hide","hidden","enabled","autoDisableChildren","expandTop","ignoreEvent","canExpand","loadChildren","then","_","collapsed","canCollapse","expanded","toggleExpand","_toggleOpenedState","toggleCollapse","isDropable","isDraggable","startDragging","isRoot","model","store","__silence","finishDragging","destination","destinationPosition","clone","append","after","before","selectedNodes","vm","$set","startEditing","_editingNode","activeElement","stopEditing","newText","prevText","verbose","first","last","next","nextNode","prev","prevNode","insertAt","objectToNode","reverse","n","splice","addChild","prepend","empty","pop","removeNode","isNode","focus","toJSON","nodeStates","matched","dragging","draggable","dropable","merge","o","List","includes","indexOf","removeAll","top","defaultPropertyNames","TreeParser","parse","p","converter","names","convertedItem","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","addEventListener","response","e","send","orderAsc","node0","node1","orderDesc","compareFunction","order","getCompareFunction","sort","Tree","opts","template","urlTemplate","fetchData","m","re","exec","replace","catch","onFetchError","$on","$once","$off","_sort","compareFn","sortTree","query","this$1","clearFilter","__expanded","matches","predicate","matcher","plainList","checkedNodes","minFetchDelay","loading","ms","fetch","all","setTimeout","parseData","modelParse","fetchInitData","setModel","requestAnimationFrame","multiple","checkOnSelect","unselectAll","treeNode","getNode","selectAll","checkAll","uncheckAll","expandAll","collapseAll","target","nextVisibleNode","prevVisibleNode","addToModel","sourceNode","position","addNode","updateData","callback","getNodeById","keyCodes","codesArr","$el","deletion","keyCode","preventDefault","stopPropagation","leftArrow","rightArrow","focusUp","focusdDown","assert","truth","message","initEvents","emitter","newNode","DropPosition","ABOVE","BELOW","ON","event","composedPath","tagName","window","parentElement","getDropDestination","selectedNode","className","i","getSelectedNode","updateHelperClasses","classes","callDndCb","propertyNames","mounted","dataProvider","_provided","connectStore","keyboardNavigation","initKeyboardNavigation","methods","getter","dispatcher","mutations","Store","subscribe","action","$nextTick","findAll","getRootNode","onDragStart","dnd","$$startDragPosition","clientX","clientY","$$possibleDragNode","initDragListeners","removeListeners","removeEventListener","onMouseUp","onMouseMove","dropPosition","draggableNode","$$dropDestination","start","abs","left","coords","nodeSection","dropDestination","querySelectorAll","clearDropClasses","dropDestinationId","getAttribute","getBoundingClientRect","height","cbResult","TreeRoot","install","Vue","component","use"],"mappings":"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"}